{"mappings":"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","sources":["JS/challenge-2.js","JS/challenge-1.js","JS/challenge-3.js","JS/index.js"],"sourcesContent":["\"use strict\";\n// CHALLENGE 2\n// create a function that checks speed limit\n\nexport const speedDetector = function () {\n  // accessing elements from the DOM\n  const speed = document.querySelector(\"#speed\").value;\n  const messageOutput = document.querySelector(\"#messageOutput\");\n  const pointsOutput = document.querySelector(\"#pointsOutput\");\n  // setting a speed range\n  if (speed > 0 && speed <= 400) {\n    // initializing variables\n    const speedLimit = 70;\n    let demeritPoints;\n    // calculating speed above the speed limit\n    const exceededSpeed = speed - speedLimit;\n    // checking for various conditions\n    if (speed <= speedLimit) {\n      demeritPoints = 0;\n      messageOutput.innerHTML = \"OK\";\n    } else {\n      demeritPoints = Math.ceil(exceededSpeed / 5);\n    }\n    // display points\n    pointsOutput.innerHTML = `points: ${demeritPoints}`;\n\n    if (demeritPoints > 0 && demeritPoints <= 12) {\n      messageOutput.innerHTML = \"Warning\";\n    } else if (demeritPoints > 12) {\n      messageOutput.innerHTML = \"Licence Suspended\";\n    }\n  } else {\n    // default to account for speed outside speed limit range\n    pointsOutput.innerHTML = \"Please enter a valid speed\";\n    messageOutput.innerHTML = \"......\";\n  }\n};\n//  export function to index.js\nexport default speedDetector;\n","\"use strict\";\n// CHALLENGE 1\n// To do\n// create a function that generates student grades\nexport const studentGradeGenerator = function () {\n  // initializing variables\n  const score = parseFloat(document.querySelector(\"#score\").value);\n  const gradeOutput = document.querySelector(\"#gradeOutput\");\n  let grade;\n  const outPutMsg = function (grade, score) {\n    return `Score: ${score} Grade: ${grade}`;\n  };\n  //   setting score range\n  if (score >= 0 && score <= 100) {\n    // checking for conditions using if else\n    if (score > 79) {\n      grade = \"A\";\n    } else if (score > 59 && score <= 79) {\n      grade = \"B\";\n    } else if (score > 49 && score <= 59) {\n      grade = \"C\";\n    } else if (score > 39 && score <= 49) {\n      grade = \"D\";\n    } else if (score < 40) {\n      grade = \"E\";\n    }\n    gradeOutput.innerHTML = outPutMsg(grade, score);\n  } else {\n    // accounts for inputs that are beyond score range\n    gradeOutput.innerHTML = \"Please enter a valid score\";\n  }\n};\n\n//  export function to index.js\nexport default studentGradeGenerator;\n","\"use strict\";\n// accessing elements from the DOM\nconst nssfDisplay = document.querySelector(\"#nssf\");\nconst nhifDisplay = document.querySelector(\"#nhif\");\nconst payeeDisplay = document.querySelector(\"#payee\");\n\n// listing NHIF contribution\nconst nhifDeductions = function (grossSalary) {\n  let deduction;\n  if (grossSalary > 1000 && grossSalary <= 6000) {\n    deduction = 150;\n  } else if (grossSalary >= 6000 && grossSalary < 8000) {\n    deduction = 300;\n  } else if (grossSalary >= 8000 && grossSalary < 12000) {\n    deduction = 400;\n  } else if (grossSalary >= 12000 && grossSalary < 15000) {\n    deduction = 500;\n  } else if (grossSalary >= 15000 && grossSalary < 20000) {\n    deduction = 600;\n  } else if (grossSalary >= 20000 && grossSalary < 25000) {\n    deduction = 750;\n  } else if (grossSalary >= 25000 && grossSalary < 30000) {\n    deduction = 850;\n  } else if (grossSalary >= 30000 && grossSalary < 35000) {\n    deduction = 900;\n  } else if (grossSalary >= 35000 && grossSalary < 40000) {\n    deduction = 950;\n  } else if (grossSalary >= 40000 && grossSalary < 45000) {\n    deduction = 1000;\n  } else if (grossSalary >= 45000 && grossSalary < 50000) {\n    deduction = 1100;\n  } else if (grossSalary >= 50000 && grossSalary < 60000) {\n    deduction = 1200;\n  } else if (grossSalary >= 60000 && grossSalary < 70000) {\n    deduction = 1300;\n  } else if (grossSalary >= 70000 && grossSalary < 80000) {\n    deduction = 1400;\n  } else if (grossSalary >= 80000 && grossSalary < 90000) {\n    deduction = 1500;\n  } else if (grossSalary >= 90000 && grossSalary < 100000) {\n    deduction = 1600;\n  } else if (grossSalary >= 100000) {\n    deduction = 1700;\n  } else {\n    deduction = 0;\n  }\n  nhifDisplay.innerHTML = `NHIF: ${deduction}`;\n  return deduction;\n};\n\n// calculating NSSF contribution\nconst calcNssfDeductions = function (grossSalary) {\n  let deductableIncome;\n  let deduction;\n  const calcDeduction = function () {\n    return 0.06 * deductableIncome;\n  };\n\n  if (grossSalary >= 3000 && grossSalary <= 18000) {\n    deductableIncome = grossSalary;\n    deduction = calcDeduction();\n  } else if (grossSalary > 18000) {\n    deductableIncome = 18000;\n    deduction = calcDeduction();\n  } else {\n    deduction = 0;\n  }\n  nssfDisplay.innerHTML = `NSSF: ${deduction}`;\n  return deduction;\n};\n\n// calculating payee\nconst calcPayee = function (grossSalary) {\n  // initializing variables\n  let taxBeforeRelief;\n  let payee;\n  const personalRelief = 2400;\n  const nssfDed = calcNssfDeductions(grossSalary);\n  const taxableIncome = grossSalary - nssfDed;\n  const minTaxableIncome = 24000;\n  // first 24 000 = 10%\n  //  next 100 000 = 25%\n  const secondPart = 100000 / 12;\n\n  //  calculating tax before relief\n  if (taxableIncome >= minTaxableIncome) {\n    const exceededAmount = taxableIncome - minTaxableIncome;\n    if (exceededAmount > 0 && exceededAmount <= secondPart) {\n      taxBeforeRelief =\n        minTaxableIncome * 0.1 + (secondPart - exceededAmount) * 0.25;\n    } else if (exceededAmount > secondPart) {\n      // in excess of 388000 = 30%\n      const thirdPart = exceededAmount - secondPart;\n      taxBeforeRelief =\n        minTaxableIncome * 0.1 + secondPart * 0.25 + thirdPart * 0.3;\n    }\n    payee = parseInt(taxBeforeRelief - personalRelief);\n  } else {\n    payee = 0;\n  }\n  payeeDisplay.innerHTML = `PAYEE: ${payee}`;\n  return payee;\n};\n\nexport const netSalaryCalculator = function () {\n  // getting grossSalary value\n  const grossSalary = document.querySelector(\"#grossSalary\").value;\n  // initializing variable\n  const nhifDed = nhifDeductions(grossSalary);\n  const nssfDed = calcNssfDeductions(grossSalary);\n  const taxableIncome = grossSalary - nssfDed;\n  const payee = calcPayee(grossSalary);\n  const netSalaryDisplay = document.querySelector(\"#netSalary\");\n  const taxableIncomeDisplay = document.querySelector(\"#taxableIncome\");\n  // display taxable income\n  taxableIncomeDisplay.innerHTML = `Taxable income: ${taxableIncome}`;\n\n  const netSalary = taxableIncome - payee - nhifDed;\n\n  // display net salary\n  netSalaryDisplay.innerHTML = `Net Salary: ${netSalary}`;\n};\n\n//  export main(netSalaryCalculator) function to index.js\nexport default netSalaryCalculator;\n","import { speedDetector } from \"./challenge-2\";\nimport { studentGradeGenerator } from \"./challenge-1\";\nimport netSalaryCalculator from \"./challenge-3\";\n\n\n// appending reusts of all the challenges to the DOM\nconst gradeBtn = document.querySelector(\"#gradeBtn\");\nconst pointsBtn = document.querySelector(\"#pointsBtn\")\nconst salaryBtn = document.querySelector(\"#salaryBtn\")\n\ngradeBtn.addEventListener(\"click\", studentGradeGenerator)\n\npointsBtn.addEventListener(\"click\", speedDetector)\n\nsalaryBtn.addEventListener(\"click\", netSalaryCalculator)\n\n"],"names":["$3a9c394b13266950$export$589321cf7757d6de","speed","document","querySelector","value","messageOutput","pointsOutput","speedLimit","demeritPoints","exceededSpeed","innerHTML","Math","ceil","$e5496a678273f1c3$export$240a4368dba295d0","score","parseFloat","gradeOutput","grade","outPutMsg","$96c4a9aaf39f9e3e$var$nssfDisplay","$96c4a9aaf39f9e3e$var$nhifDisplay","$96c4a9aaf39f9e3e$var$payeeDisplay","$96c4a9aaf39f9e3e$var$calcNssfDeductions","grossSalary","deductableIncome","deduction","calcDeduction","$96c4a9aaf39f9e3e$export$2e2bcd8739ae039","nhifDed","$96c4a9aaf39f9e3e$var$nhifDeductions","taxableIncome","payee","taxBeforeRelief","minTaxableIncome","secondPart","exceededAmount","parseInt","$96c4a9aaf39f9e3e$var$calcPayee","netSalaryDisplay","netSalary","$dd655dc6e89101ea$var$gradeBtn","$dd655dc6e89101ea$var$pointsBtn","$dd655dc6e89101ea$var$salaryBtn","addEventListener"],"version":3,"file":"index.cae41589.js.map"}